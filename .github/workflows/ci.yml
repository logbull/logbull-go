name: CI

on:
    push:
        branches: [main, master, develop]
    pull_request:
        branches: [main, master]

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: ["1.21", "1.22", "1.23"]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Download dependencies
              run: go mod download

            - name: Run tests
              run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  files: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: golangci-lint
              uses: golangci/golangci-lint-action@v4
              with:
                  version: latest

    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: Build
              run: go build -v ./...
